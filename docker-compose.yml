services:
  # prefect-database:
  #   image: postgres
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=root
  #     - POSTGRES_PASSWORD=decinablesprewad
  #     - POSTGRES_DB=prefect
  #   volumes: 
  #     - db:/var/lib/postgresql/data
    # profiles: ["server"]
  
  ### MinIO for flow storage
  # minio:
  #   image: minio/minio:latest
  #   entrypoint: ["minio", "server", "--address", "0.0.0.0:9000", "--console-address", "0.0.0.0:9001", "/data"]
  #   volumes:
  #     - "minio:/data"
  #   ports:
  #     - 9000:9000
  #     - 9001:9001
  #   environment:
  #     - MINIO_ROOT_USER="root"
  #     - MINIO_ROOT_PASSWORD="decinablesprewad"
  #   # profiles: ["minio"]
  
  ### Prefect Server API and UI
  # prefect-server:
  #   image: prefecthq/prefect:2.10.17-python3.11
  #   restart: always
  #   volumes:
  #     - prefect:/root/.prefect
  #   entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "server", "start"]
  #   environment:
  #     # If you want to access Prefect Server from anywhere other than the Docker host machine, you will need to change
  #     # PREFECT_UI_URL to match the external hostname/IP used to load the  UI in your web browser.
  #     - PREFECT_UI_URL=http://127.0.0.0:4200/api
  #     - PREFECT_API_URL=http://127.0.0.1:4200/api
  #     - PREFECT_SERVER_API_HOST=0.0.0.0
  #     - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://root:decinablesprewad@prefect-database:5432/prefect
  #     # Uncomment the following line if you want to use the 'S3 Bucket' storage block instead of the older 'S3' storage
  #     # - EXTRA_PIP_PACKAGES=prefect-aws
  #   ports:
  #     - 4200:4200
  #   depends_on:
  #     - prefect-database
  #   # profiles: ["server"]

  ## Prefect Agent
#   prefect-agent:
#     image: prefecthq/prefect:2.10.17-python3.11
#     restart: always
#     entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "agent", "start", "-q", "default"]
#     environment:
#       - PREFECT_API_URL=http://prefect-server:4200/api
# #       Use PREFECT_API_KEY if connecting the agent to Prefect Cloud
# #     - PREFECT_API_KEY=YOUR_API_KEY
#     # profiles: ["agent"]

  ### Prefect CLI
#   prefect-cli:
#     image: prefecthq/prefect:2.10.17-python3.11
#     entrypoint: "bash"
#     working_dir: "/root/flows"
#     volumes:
#       - "./flows:/root/flows"
#     environment:
#       - PREFECT_API_URL=http://server:4200/api
# #       Use PREFECT_API_KEY to use the CLI to interact with Prefect Cloud
# #     - PREFECT_API_KEY=YOUR_API_KEY
#     # profiles: ["cli"]

  mongo:
    image: mongo
    restart: always
    environment:
      - "MONGO_INITDB_ROOT_USERNAME=root"
      - "MONGO_INITDB_ROOT_PASSWORD=decinablesprewad"
  
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - "ME_CONFIG_MONGODB_ADMINUSERNAME=root"
      - "ME_CONFIG_MONGODB_ADMINPASSWORD=decinablesprewad"
      - "ME_CONFIG_MONGODB_URL=mongodb://root:decinablesprewad@mongo:27017/"

  postgres:
    image: postgres
    restart: always
    environment:
      - "POSTGRES_PASSWORD=decinablesprewad"
      - "POSTGRES_USER=root"
      - "POSTGRES_DB=netcore"
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    
  redis:
    image: redis
    restart: always
    command: redis-server --save 20 1 --loglevel debug --requirepass decinablesprewad
    volumes:
      - cache:/data
    ports:
      - 6379:6379
  
  nautobot-postgres:
    image: postgres
    restart: always
    environment:
      - "TZ=Europe/Paris"
      - "POSTGRES_PASSWORD=decinablesprewad"
      - "POSTGRES_USER=root"
      - "POSTGRES_DB=nautobot"

  nautobot: &nautobot
    image: networktocode/nautobot:1.5.22
    depends_on:
      - redis
      - nautobot-postgres
    ports:
      - 8443:8443
      - 8082:8080 # 8080 is already in use locally
    environment:
      - NAUTOBOT_ALLOWED_HOSTS=*
      - NAUTOBOT_DB_HOST=nautobot-postgres
      - NAUTOBOT_DB_NAME=nautobot
      - NAUTOBOT_DB_PASSWORD=decinablesprewad
      - NAUTOBOT_DB_USER=root
      - NAUTOBOT_REDIS_HOST=redis
      - NAUTOBOT_REDIS_PASSWORD=decinablesprewad
      - NAUTOBOT_CACHEOPS_REDIS=redis://:decinablesprewad@redis:6379/1
      - NAUTOBOT_REDIS_PORT=6379
      - NAUTOBOT_LOG_LEVEL=DEBUG
      - NAUTOBOT_CREATE_SUPERUSER=true
      - NAUTOBOT_SUPERUSER_NAME=root
      - NAUTOBOT_SUPERUSER_EMAIL=root@example.com
      - NAUTOBOT_SUPERUSER_PASSWORD=decinablesprewad
      - NAUTOBOT_SUPERUSER_API_TOKEN=0123456789abcdef0123456789abcdef01234567
      - NAUTOBOT_MAX_PAGE_SIZE=5000
      - NAUTOBOT_METRICS_ENABLED=true
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://127.0.0.1:8080/health/ || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 5s

  # celery_worker:
  #   <<: *nautobot
  #   entrypoint: nautobot-server celery worker -l DEBUG
  #   depends_on:
  #     - nautobot
  #     - redis
  #   environment:
  #     - NAUTOBOT_ALLOWED_HOSTS=*
  #     - NAUTOBOT_DB_HOST=nautobot-postgres
  #     - NAUTOBOT_DB_NAME=nautobot
  #     - NAUTOBOT_DB_PASSWORD=decinablesprewad
  #     - NAUTOBOT_DB_USER=nautobot
  #     - NAUTOBOT_REDIS_HOST=redis
  #     - NAUTOBOT_REDIS_PASSWORD=decinablesprewad
  #     - NAUTOBOT_CACHEOPS_REDIS=redis://:decinablesprewad@redis:6379/1
  #     - NAUTOBOT_REDIS_PORT=6379
  #     - NAUTOBOT_LOG_LEVEL=DEBUG
  #     - NAUTOBOT_CREATE_SUPERUSER=true
  #     - NAUTOBOT_SUPERUSER_NAME=root
  #     - NAUTOBOT_SUPERUSER_EMAIL=admin@example.com
  #     - NAUTOBOT_SUPERUSER_PASSWORD=decinablesprewad
  #     - NAUTOBOT_SUPERUSER_API_TOKEN=0123456789abcdef0123456789abcdef01234567
  #     - NAUTOBOT_MAX_PAGE_SIZE=5000
  #     - NAUTOBOT_METRICS_ENABLED=true
  #   healthcheck:
  #     test: ["CMD", "nautobot-server", "health_check"]
  #     interval: 30s
  #     timeout: 15s
  #     retries: 3
  #     start_period: 5s

  vault:
    image: hashicorp/vault
    ports:
      - 8200:8200
    environment:
      - "VAULT_ADDR=http://0.0.0.0:8200"
      - "VAULT_DEV_ROOT_TOKEN_ID=decinablesprewad"
    cap_add: # need to check what is this shit
      - IPC_LOCK

  # netcore:
  #   build: .
  #   depends_on:
  #     - postgres
  #     - redis
  #     - nautobot
  #     - vault
  #     - mongo
  #   ports:
  #     - 8000:8000
  #   environment:
  #     - "DATABASE_URL=postgresql+asyncpg://root:decinablesprewad@postgres/netcore"
  #     - "ENVIRONMENT=development"
  #     - "LOG_LEVEL=debug"
  #     - "PORT=8000"  # In case of 0, it will take the first free port
  #     - "ACCESS_LOG=true"
  #     - "HOST=0.0.0.0"
  #     - "REDIS_URL=redis://:decinablesprewad@redis:6379/0"
  #     - "PROMETHEUS=true"
  #     - "GRAPHQL=true"

volumes:
  cache:
    driver: local
  prefect:
  db:
  minio: